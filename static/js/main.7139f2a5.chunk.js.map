{"version":3,"sources":["resources/images/icons/linkedin.svg","resources/images/icons/behance.svg","resources/images/icons/instagram.svg","resources/images/icons/rrss.svg","components/HeroPresentation.jsx","components/ProjectSelector.jsx","pages/Home.jsx","pages/About.jsx","pages/Project.jsx","components/Nav.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroPresentation","props","useState","itemOnAnimation","setItemOnAnimation","useEffect","interval","setInterval","clearInterval","className","ProjectSelector","projects","projectSelector","useRef","active","setActive","document","body","getBoundingClientRect","y","position","setPosition","handleScroll","useCallback","newPosition","elementRect","current","height","length","window","addEventListener","removeEventListener","id","ref","map","project","index","key","to","toString","padStart","data","name","src","process","mainImage","alt","Home","Projects","presentation","setPresentation","event","deltaY","presentationTimer","setTimeout","clearTimeout","timer","Fragment","About","state","Component","Project","filter","match","params","Nav","role","href","socialMediaIcon","target","rel","linkedinIcon","behanceIcon","instagramIcon","App","path","exact","component","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7139f2a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/linkedin.8ca5fdce.svg\";","module.exports = __webpack_public_path__ + \"static/media/behance.96012082.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.716b1787.svg\";","module.exports = __webpack_public_path__ + \"static/media/rrss.f6f21b50.svg\";","import React, { useEffect, useState } from \"react\";\nimport \"./../resources/styles/HeroPresentation.scss\";\n\nconst HeroPresentation = (props) => {\n  const [itemOnAnimation, setItemOnAnimation] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setItemOnAnimation(itemOnAnimation + 0.5);\n    }, 500);\n    if (itemOnAnimation > 4) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [itemOnAnimation]);\n\n  return (\n    <section className=\"hero-presentation\">\n      <div className=\"hero-title\">\n        <h1 className={`${itemOnAnimation <= 0.5 ? \"animate\" : \"invisible\"}`}>\n          Jorge\n        </h1>\n        <h1 className={`${itemOnAnimation >= 1 ? \"animate\" : \"invisible\"}`}>\n          Ramiro\n        </h1>\n      </div>\n      <div className=\"scroll-warning\">\n        <div\n          className={`scroll-indicator ${\n            itemOnAnimation >= 2 ? \"animate\" : \"invisible\"\n          }`}\n        >\n          <div\n            className={`${itemOnAnimation >= 2 ? \"scroll-border\" : \"\"}`}\n          ></div>\n        </div>\n        <p\n          className={`scroll-text ${\n            itemOnAnimation >= 3 ? \"animate\" : \"invisible\"\n          }`}\n        >\n          Scroll down\n        </p>\n      </div>\n    </section>\n  );\n};\n\nexport default HeroPresentation;\n","import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./../resources/styles/ProjectSelector.scss\";\n\nconst ProjectSelector = props => {\n  const projects = props.projects;\n  const projectSelector = useRef();\n\n  const [active, setActive] = useState(0);\n  const [position, setPosition] = useState(\n    document.body.getBoundingClientRect().y\n  );\n\n  const handleScroll = useCallback(() => {\n    const newPosition = document.body.getBoundingClientRect().y;\n    const elementRect = projectSelector.current.getBoundingClientRect();\n\n    if (elementRect.y < 0 && elementRect.y > -(elementRect.height / 2)) {\n      if (position - newPosition > 30) {\n        if (active + 1 >= 0 && active + 1 < projects.length) {\n          setActive(active + 1);\n        }\n        setPosition(newPosition);\n      } else if (position - newPosition < -30) {\n        if (active - 1 >= 0 && active - 1 < projects.length) {\n          setActive(active - 1);\n        }\n        setPosition(newPosition);\n      }\n    }\n  }, [active, position, projects.length]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, [handleScroll]);\n\n  return (\n    <section id=\"project-selector\" ref={projectSelector}>\n      <ul className=\"project-list\">\n        {projects.map((project, index) => (\n          <li\n            key={project.id}\n            className={`project-link ${active === index ? \"active\" : \"\"} ${\n              active === index + 2 || active === index - 2 ? \"last\" : \"\"\n            }`}\n          >\n            <Link to={`/projects/${project.id}`}>\n              {`${(index + 1).toString().padStart(2, \"0\")}_${\n                project.data.name\n              }`}\n            </Link>\n            <img\n              src={`${process.env.PUBLIC_URL}${project.data.mainImage}`}\n              alt={project.data.name}\n            />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default ProjectSelector;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport data from \"./../resources/projects.json\";\nimport HeroPresentation from \"./../components/HeroPresentation\";\nimport ProjectSelector from \"./../components/ProjectSelector\";\nimport \"./../resources/styles/Home.scss\";\n\nconst Home = () => {\n  const projects = data.Projects;\n  // presentation: ready running hidden\n  const [presentation, setPresentation] = useState(\"ready\");\n\n  const handleScroll = useCallback(\n    (event) => {\n      if (event.deltaY > 1 && presentation === \"ready\") {\n        setPresentation(\"running\");\n        const presentationTimer = setTimeout(\n          () => setPresentation(\"hidden\"),\n          1000\n        );\n        return () => {\n          clearTimeout(presentationTimer);\n        };\n      }\n    },\n    [presentation]\n  );\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      window.addEventListener(\"wheel\", handleScroll);\n    }, 4000);\n    return () => {\n      clearTimeout(timer);\n      window.removeEventListener(\"wheel\", handleScroll);\n    };\n  }, [handleScroll]);\n\n  return (\n    <React.Fragment>\n      {presentation !== \"hidden\" && (\n        <div className={`presentation ${presentation}`}>\n          <HeroPresentation></HeroPresentation>\n        </div>\n      )}\n      <div\n        className={`container ${\n          presentation === \"ready\" || presentation === \"running\"\n            ? \"invisible\"\n            : \"\"\n        }`}\n      >\n        <ProjectSelector projects={projects}></ProjectSelector>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass About extends Component {\n  state = {};\n  render() {\n    return <h1>About</h1>;\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\nimport data from \"./../resources/projects.json\";\n\nclass Project extends Component {\n  state = {};\n  render() {\n    let project = data.Projects.filter(\n      project => project.id === this.props.match.params.id\n    );\n    project = project[0];\n    return <h1>Project {project.data.name}</h1>;\n  }\n}\n\nexport default Project;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./../resources/styles/Nav.scss\";\nimport linkedinIcon from \"./../resources/images/icons/linkedin.svg\";\nimport behanceIcon from \"./../resources/images/icons/behance.svg\";\nimport instagramIcon from \"./../resources/images/icons/instagram.svg\";\nimport socialMediaIcon from \"./../resources/images/icons/rrss.svg\";\n\nclass Nav extends Component {\n  render() {\n    return (\n      <nav className=\"navbar\" role=\"navigation\">\n        <ul className=\"navbar-navigation\">\n          <li>\n            <Link className=\"navlink\" to=\"/\">\n              Home\n            </Link>\n          </li>\n          <li>\n            <Link className=\"navlink\" to=\"/\">\n              Contact\n            </Link>\n          </li>\n          <li>\n            <Link className=\"navlink\" to=\"/about\">\n              About\n            </Link>\n          </li>\n        </ul>\n        <ul className=\"navbar-socialmedia\">\n          <li className=\"dropdown dropdown-top dropdown-mobile dropdown-tablet\">\n            <a className=\"socialmedia-dropdown\" href=\"#\">\n              <img src={socialMediaIcon} alt=\"social media icon\" />\n            </a>\n            <ul className=\"socialmedia-links\">\n              <li className=\"navicon\">\n                <a\n                  href=\"https://es.linkedin.com/in/jorgeramiro\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={linkedinIcon} alt=\"linkedin icon\" />\n                </a>\n              </li>\n              <li className=\"navicon\">\n                <a\n                  href=\"https://www.behance.net/JorgeRamiro\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={behanceIcon} alt=\"behance icon\" />\n                </a>\n              </li>\n              <li className=\"navicon\">\n                <a\n                  href=\"https://www.instagram.com/ramiro.jorge/\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={instagramIcon} alt=\"instagram icon\" />\n                </a>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./resources/styles/App.scss\";\nimport Home from \"./pages/Home\";\nimport About from \"./pages/About\";\nimport Project from \"./pages/Project\";\nimport Nav from \"./components/Nav\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/about\" exact component={About} />\n        <Route path=\"/projects/:id\" component={Project} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}